# This is a basic workflow to help you get started with Actions

name: Metrix Dvora 2 GO :)

# Controls when the workflow will run
on:
  # Triggers the workflow on push or pull request events but only for the "main" branch
  push:
    branches: [ "main" ]
    paths-ignore:
      - 'README.md'
      - '.github/workflows/matrix.yml'
      - '.github/workflows/DownloadsApps.yml'
      - 'DownloadsApps.csv'
      - './docs/*'
      - 'history.txt'
  pull_request:
    branches: [ "main" ]

  # Allows you to run this workflow manually from the Actions tab
  workflow_dispatch:

concurrency:
  group: workflow-${{ github.head_ref }}
  cancel-in-progress: true

# A workflow run is made up of one or more jobs that can run sequentially or in parallel
jobs:
  theMatrix:
    strategy:
      fail-fast: false
      matrix:
        os: [ubuntu-latest, macos-latest, windows-latest]
        python: [2.7, 3.6, 3.8]
    runs-on: ${{ matrix.os }}

    steps:
      - name: Checkout Repo
        uses: actions/checkout@v2
        
      - name: Get Public IPv4
        shell: pwsh
        run: Invoke-RestMethod 'https://api.ipify.org?format=json'
     
      - name: Get Local IPv4 - Windows
        if: matrix.os == 'windows-latest'
        run:   |
           (Get-NetIPAddress -AddressFamily IPV4).IPAddress
        shell: pwsh
        
      - name: Get Local IPv4 - Linux and Macos
        if: matrix.os != 'windows-latest'
        run:   |
           ifconfig
        shell: pwsh
        
      - name: Create download folder
        shell: pwsh
        run: new-item DownloadFiles -ItemType directory -ErrorAction SilentlyContinue

      - name: Download files - Windows
        if: matrix.os == 'windows-latest'
        shell: pwsh
        run: cat Downloads.txt | foreach { Start-BitsTransfer $_ -Destination .\DownloadFiles}

      - name: Get all Files Hashes - Windows
        if: matrix.os == 'windows-latest'
        shell: pwsh
        run: |
          Get-ChildItem .\DownloadFiles -File | Get-FileHash | Select -Property hash, @{N='File'; E={$_.path.split('\')[-1]}} | Export-Csv -Path .\windows_hash.csv -Encoding UTF8

      - name: Get all Hashes from CSV - Windows
        if: matrix.os == 'windows-latest'
        shell: pwsh
        run: |
          cat .\windows_hash.csv

      - uses: actions/upload-artifact@v2
        if: matrix.os == 'windows-latest'
        with:
          name: windows-hash
          path: .\windows_hash.csv
          
      - name: Download all links from file - Linux
        if: matrix.os == 'ubuntu-latest'
        run: |
          cd ./DownloadFiles
          cat ../Downloads.txt | parallel --gnu "wget {}"

      - name: Get all Files Hashes - Linux
        if: matrix.os == 'ubuntu-latest'
        shell: pwsh
        run: |
          Get-ChildItem ./DownloadFiles -File | Get-FileHash | Select -Property hash, @{N='File'; E={$_.path.split('/')[-1]}} | Export-Csv -Path ./linux_hash.csv -Encoding UTF8

      - uses: actions/upload-artifact@v2
        with:
          name: linux-hash
          path: ./linux_hash.csv
        
      - name: Download all links from file - Macos
        if: matrix.os == 'macos-latest'
        run: |
          brew install parallel
          cd ./DownloadFiles
          cat ../Downloads.txt | parallel --gnu "wget {}"

      - name: Get all Files Hashes - Macos
        if: matrix.os == 'macos-latest'
        shell: pwsh
        run: |
          Get-ChildItem ./DownloadFiles -File | Get-FileHash | Select -Property hash, @{N='File'; E={$_.path.split('/')[-1]}} | Export-Csv -Path ./macos_hash.csv -Encoding UTF8

      - uses: actions/upload-artifact@v2
        if: matrix.os == 'macos-latest'
        with:
          name: macos-hash
          path: ./macos_hash.csv
          
  compare_hash:
    runs-on: ubuntu-latest
    needs: [theMatrix]
    steps:
      - uses: actions/checkout@v2
      
      - name: download-artifact - linux-hash
        uses: actions/download-artifact@v2
        with:
          name: linux-hash

      - name: download-artifact - macos-hash
        uses: actions/download-artifact@v2
        with:
          name: macos-hash
      
      - name: download-artifact - windows-hash
        uses: actions/download-artifact@v2
        with:
          name: windows-hash

      - name: get all files in current directory
        run: dir
        
      - name: Compare linux and windows hashes
        shell: pwsh
        run: | 
          $ReferenceObject = Import-Csv -Path linux_hash.csv
          $DifferenceObject = Import-Csv -Path windows_hash.csv
          Compare-Object -ReferenceObject $ReferenceObject -DifferenceObject $DifferenceObject -IncludeEqual -Property hash,File | Format-List

      - name: Compare linux and macos hashes
        shell: pwsh
        run: | 
          $ReferenceObject = Import-Csv -Path linux_hash.csv
          $DifferenceObject = Import-Csv -Path macos_hash.csv
          Compare-Object -ReferenceObject $ReferenceObject -DifferenceObject $DifferenceObject -IncludeEqual -Property hash,File | Format-List

      - name: Compare windows and macos hashes
        shell: pwsh
        run: | 
          $ReferenceObject = Import-Csv -Path windows_hash.csv
          $DifferenceObject = Import-Csv -Path macos_hash.csv
          Compare-Object -ReferenceObject $ReferenceObject -DifferenceObject $DifferenceObject -IncludeEqual -Property hash,File | Format-List
